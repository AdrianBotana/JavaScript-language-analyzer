Axioma = S

NoTerminales = { S B T E E1 E2 M O P V V1 R}

Terminales = { var id write ( ) { } int chars function while return |= = + - ; == && , }

Producciones = {
S -> var T id ; S
S -> id B E ; S
S -> write ( E ) ; S
S -> while ( E1 ) { P } S
S -> if ( E1 ) { P } S
S -> function T id ( V ){ P R } S
T -> int | chars
E -> cte-ent M | cadena M | id M
M -> O E | lambda
E1 -> E == E E2
E2 -> && E1 | lambda
O -> + | -
P -> S P | lambda
B -> = | |=
V -> T id V1 
V1 -> , V | lambda
R -> return E ;| lambda
}

crear variable global tipo para manejar mejor los errores semanticos

int desp 2
chars desp 16
fun desp = valor devuelto
